// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// --- Core Models ---
model User {
  id             String        @id @default(uuid())
  email          String        @unique
  password       String
  name           String
  role           UserRole
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  jobs           Job[]         @relation("PostedJobs")
  applications   Application[]
}

enum UserRole {
  ADMIN
  EMPLOYER
  STUDENT
  UNIVERSITY
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  users     User[]
  jobs      Job[]
  createdAt DateTime @default(now())
}

model Job {
  id             String        @id @default(uuid())
  title          String
  description    String
  organization   Organization  @relation(fields: [organizationId], references: [id])
  organizationId String
  postedBy       User          @relation("PostedJobs", fields: [postedById], references: [id])
  postedById     String
  applications   Application[]
  createdAt      DateTime      @default(now())
}

model Application {
  id        String            @id @default(uuid())
  user      User              @relation(fields: [userId], references: [id])
  userId    String
  job       Job               @relation(fields: [jobId], references: [id])
  jobId     String
  status    ApplicationStatus @default(PENDING)
  createdAt DateTime          @default(now())
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}

// --- End Core Models ---
